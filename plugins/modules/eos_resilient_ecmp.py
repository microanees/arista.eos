#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2021 Red Hat
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for eos_resilient_ecmp
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'network'
}

DOCUMENTATION = """
---
module: eos_resilient_ecmp
short_description: Manages Resilient ECMP resource module.
description:
  - This module manages Resilient ECMP configurations on Arista EOS platforms.
version_added: 1.0.0
author: Mohamed Anees (@microanees)
notes:
  - Tested against Arista EOS 4.20.14M
  - This module works with connection C(network_cli). See the L(EOS Platform Options,eos_platform_options).
options:
  config:
    description: Resilient ECMP configurations per Address Family.
    type: list
    elements: dict
    suboptions:
      afi:
        description:
          - Specifies the top level address family indicator.
        type: str
        choices: ['ipv4', 'ipv6']
        required: true
      routes:
        description: A list of Resilient ECMP entries.
        type: list
        elements: dict
        required: true
        suboptions:
          dest:
            description:
              - IPv4/IPv6 Network Address.
              - The address format is <v4/v6 address>/<mask>.
              - The mask is number in range 0-32 for IPv4 and in range 0-128 for IPv6.
            type: str
            required: true
          capacity:
            description:
              - Number of next-hop addresses.
            type: int
            required: true
          redundancy:
            description:
              - Number of times next-hop addresses are duplicated in the table.
            type: int
            required: true
  running_config:
    description:
      - This option is used only with state I(parsed).
      - The value of this option should be the output received from the EOS device by
        executing the command B(show running-config | include hardware fib ecmp resilience).
      - The state I(parsed) reads the configuration from C(running_config) option and
        transforms it into Ansible structured data as per the resource module's argspec
        and the value is then returned in the I(parsed) key within the result.
    type: str
  state:
    description:
      - The state the configuration should be left in.
    type: str
    choices:
      - deleted
      - merged
      - overridden
      - replaced
      - gathered
      - rendered
      - parsed
    default: merged
"""
EXAMPLES = """
# Using merged


# Using replaced


# Using overridden


# Using deleted


# Using gathered


# Using parsed


# Using rendered


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.arista.eos.plugins.module_utils.network.eos.argspec.resilient_ecmp.resilient_ecmp import (
    Resilient_ecmpArgs,
)
from ansible_collections.arista.eos.plugins.module_utils.network.eos.config.resilient_ecmp.resilient_ecmp import (
    Resilient_ecmp,
)


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Resilient_ecmpArgs.argument_spec,
                           supports_check_mode=True)

    result = Resilient_ecmp(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
